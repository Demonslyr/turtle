{"version":3,"file":"user.js","sourceRoot":"","sources":["../../../src/bin/utils/user.ts"],"names":[],"mappings":";;AAAA,mCAAwC;AAExC,2EAAgF;AAOzE,KAAK,UAAU,kBAAkB,CAAC,QAAmB;IAC1D,MAAM,WAAW,GAAG,MAAM,iBAAW,CAAC,mBAAmB,EAAE,CAAC;IAC5D,IAAI,WAAW,EAAE;QACf,OAAO,WAAW,CAAC;KACpB;SAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;QACnD,MAAM,IAAI,2CAAoB,CAAC,sCAAsC,CAAC,CAAC;KACxE;SAAM;QACL,IAAI;YACF,OAAO,MAAM,iBAAW,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;SAC5D;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;KACF;AACH,CAAC;AAbD,gDAaC","sourcesContent":["import { UserManager } from '@expo/xdl';\n\nimport { ErrorWithProgramHelp } from 'turtle/bin/commands/ErrorWithProgramHelp';\n\ninterface IUserData {\n  username?: string;\n  password?: string;\n}\n\nexport async function ensureUserLoggedIn(userData: IUserData) {\n  const currentUser = await UserManager.getCurrentUserAsync();\n  if (currentUser) {\n    return currentUser;\n  } else if (!userData.username || !userData.password) {\n    throw new ErrorWithProgramHelp('Please provide username and password');\n  } else {\n    try {\n      return await UserManager.loginAsync('user-pass', userData);\n    } catch (err) {\n      throw new Error('Failed to log in with provided username and password');\n    }\n  }\n}\n"]}