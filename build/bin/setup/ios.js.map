{"version":3,"file":"ios.js","sourceRoot":"","sources":["../../../src/bin/setup/ios.ts"],"names":[],"mappings":"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","sourcesContent":["import last from 'lodash/last';\nimport trim from 'lodash/trim';\nimport path from 'path';\nimport semver from 'semver';\n\nimport { ExponentTools } from '@expo/xdl';\n\nimport { checkSystem, ensureShellAppIsPresent } from 'turtle/bin/setup/utils/common';\nimport { IToolDefinition } from 'turtle/bin/setup/utils/toolsDetector';\nimport { formatShellAppDirectory } from 'turtle/builders/utils/ios/workingdir';\nimport config from 'turtle/config';\nimport { PLATFORMS } from 'turtle/constants';\nimport logger from 'turtle/logger';\n\nconst REQUIRED_TOOLS: IToolDefinition[] = [\n  {\n    command: 'bash',\n    missingDescription: 'Please install bash',\n  },\n  {\n    command: 'fastlane',\n    missingDescription: 'Please check https://docs.fastlane.tools/getting-started/ios/setup/',\n    versionCheckFn: async () => {\n      const MINIMAL_VERSION = '2.99.0';\n\n      const { stdout } = await ExponentTools.spawnAsyncThrowError(\n        'fastlane',\n        ['--version'],\n        { stdio: 'pipe', env: { ...process.env, FASTLANE_SKIP_UPDATE_CHECK: '1', LC_ALL: 'en_US.UTF-8' } },\n      );\n      const fastlaneVersion = parseFastlaneVersion(stdout);\n      if (fastlaneVersion && !semver.satisfies(fastlaneVersion, `>= ${MINIMAL_VERSION}`)) {\n        throw new Error(\n          `Your fastlane is on version ${fastlaneVersion}. Please upgrade it to at least ${MINIMAL_VERSION}.`,\n        );\n      }\n    },\n  },\n  {\n    command: 'xcode',\n    missingDescription: 'Please ensure xcode is properly installed',\n    testFn: async () => {\n      const { status, stdout } = await ExponentTools.spawnAsyncThrowError(\n        'xcodebuild',\n        ['-version'],\n        { stdio: 'pipe' },\n      );\n      if (stdout.match(/requires xcode/i)) {\n        return false;\n      }\n\n      if (status !== 0) {\n        return false;\n      }\n\n      try {\n        await ExponentTools.spawnAsyncThrowError('ibtool', ['--version'], { stdio: 'pipe' });\n      } catch (err) {\n        if (err.stderr) {\n          const stderr = err.stderr.trim();\n          if (stderr.match(/Agreeing to the Xcode\\/iOS license/)) {\n            logger.error('You have not accepted the Xcode license. Run \\'sudo xcodebuild -runFirstLaunch\\' to do so.');\n            return false;\n          }\n          if (stderr.match(/The bundle is damaged or missing necessary resources/)) {\n            logger.error(\n              'Make sure to install additional required components. Run \\'sudo xcodebuild -runFirstLaunch\\' to do so.',\n            );\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n  },\n];\n\nexport default async function setup(sdkVersion?: string) {\n  await checkSystem(REQUIRED_TOOLS);\n  if (sdkVersion) {\n    await ensureShellAppIsPresent(sdkVersion, {\n      formatShellAppDirectory,\n      formatShellAppTarballUriPath,\n    });\n  }\n}\n\nfunction formatShellAppTarballUriPath(sdkMajorVersion: string) {\n  return path.join(config.directories.shellTarballsDir, PLATFORMS.IOS, `sdk${sdkMajorVersion}`);\n}\n\nfunction parseFastlaneVersion(stdout: string) {\n  const lastLine = last(trim(stdout).split('\\n'));\n  if (!lastLine) {\n    return null;\n  }\n  return last(lastLine.split(' ')) || null;\n}\n"]}