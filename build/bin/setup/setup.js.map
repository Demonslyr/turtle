{"version":3,"file":"setup.js","sourceRoot":"","sources":["../../../src/bin/setup/setup.ts"],"names":[],"mappings":";;;;;AAAA,0DAAiC;AAEjC,wDAAoD;AACpD,gDAA4C;AAC5C,+CAA6C;AAE9B,KAAK,UAAU,KAAK,CAAC,QAAgB,EAAE,UAAmB;IACvE,IAAI,UAAU,IAAI,CAAC,mBAAQ,CAAC,UAAU,CAAC,EAAE;QACvC,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAC9C;IAED,IAAI,QAAQ,KAAK,qBAAS,CAAC,GAAG,EAAE;QAC9B,OAAO,MAAM,aAAQ,CAAC,UAAU,CAAC,CAAC;KACnC;SAAM,IAAI,QAAQ,KAAK,qBAAS,CAAC,OAAO,EAAE;QACzC,OAAO,MAAM,iBAAY,CAAC,UAAU,CAAC,CAAC;KACvC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;AACH,CAAC;AAZD,wBAYC","sourcesContent":["import isSemver from 'is-semver';\n\nimport setupAndroid from 'turtle/bin/setup/android';\nimport setupIos from 'turtle/bin/setup/ios';\nimport { PLATFORMS } from 'turtle/constants';\n\nexport default async function setup(platform: string, sdkVersion?: string) {\n  if (sdkVersion && !isSemver(sdkVersion)) {\n    throw new Error('SDK version is not valid.');\n  }\n\n  if (platform === PLATFORMS.IOS) {\n    return await setupIos(sdkVersion);\n  } else if (platform === PLATFORMS.ANDROID) {\n    return await setupAndroid(sdkVersion);\n  } else {\n    throw new Error('This should never happen :(');\n  }\n}\n"]}