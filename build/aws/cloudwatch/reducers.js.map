{"version":3,"file":"reducers.js","sourceRoot":"","sources":["../../../src/aws/cloudwatch/reducers.ts"],"names":[],"mappings":";;AAEA,SAAgB,GAAG,CAAC,OAAkB;IACpC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QACxB,OAAO,EAAE,CAAC;KACX;IACD,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAmB,EAAE,CAAU,EAAE,EAAE;QACjE,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;SACnB;aAAM;YACL,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC;SACzB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,OAAO,CAAC,OAAO,CAAC,CAAC;AACnB,CAAC;AAdD,kBAcC;AAED,SAAgB,GAAG,CAAC,OAAkB;IACpC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACnB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAY,CAAC;IAC1C,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7C,OAAO,CAAC,MAAM,CAAC,CAAC;AAClB,CAAC;AARD,kBAQC","sourcesContent":["import { IMetric } from 'turtle/aws/cloudwatch/types';\n\nexport function sum(metrics: IMetric[]) {\n  if (metrics.length === 0) {\n    return [];\n  }\n  const reduced = metrics.reduce((acc: IMetric | null, i: IMetric) => {\n    let result = acc;\n    if (!result) {\n      result = { ...i };\n    } else {\n      result.Value += i.Value;\n    }\n    return result;\n  }, null);\n  return [reduced];\n}\n\nexport function avg(metrics: IMetric[]) {\n  if (!metrics.length) {\n    return [];\n  }\n\n  const metric = sum(metrics)[0] as IMetric;\n  metric.Value = metric.Value / metrics.length;\n  return [metric];\n}\n"]}