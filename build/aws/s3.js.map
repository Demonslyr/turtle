{"version":3,"file":"s3.js","sourceRoot":"","sources":["../../src/aws/s3.ts"],"names":[],"mappings":";;;;;AAAA,sDAA0B;AAC1B,wDAA0B;AAC1B,oDAAuB;AAEvB,uDAAmC;AAQnC,MAAM,EAAE,GAAG,IAAI,iBAAG,CAAC,EAAE,CAAC;IACpB,GAAG,gBAAC,CAAC,IAAI,CAAC,gBAAM,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACzD,GAAG,gBAAC,CAAC,IAAI,CAAC,gBAAM,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;CACjC,CAAC,CAAC;AAEH,kBAAe,EAAE,CAAC;AAEX,KAAK,UAAU,UAAU,CAAC,EAAE,UAAU,GAAG,gBAAM,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAqB;IACjG,OAAO,MAAM,EAAE;SACZ,MAAM,CAAC;QACN,MAAM,EAAE,UAAU;QAClB,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,kBAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC;KACnC,CAAC;SACD,OAAO,EAAE,CAAC;AACf,CAAC;AARD,gCAQC","sourcesContent":["import AWS from 'aws-sdk';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\n\nimport config from 'turtle/config';\n\ninterface IFileUploadParams {\n  bucketName?: string;\n  key: string;\n  srcPath: string;\n}\n\nconst s3 = new AWS.S3({\n  ..._.pick(config.aws, ['accessKeyId', 'secretAccessKey']),\n  ..._.pick(config.s3, ['region']),\n});\n\nexport default s3;\n\nexport async function uploadFile({ bucketName = config.s3.bucket, key, srcPath }: IFileUploadParams) {\n  return await s3\n    .upload({\n      Bucket: bucketName,\n      Key: key,\n      Body: fs.createReadStream(srcPath),\n    })\n    .promise();\n}\n"]}