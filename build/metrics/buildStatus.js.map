{"version":3,"file":"buildStatus.js","sourceRoot":"","sources":["../../src/metrics/buildStatus.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8DAAoD;AACpD,6DAAuE;AACvE,qEAA2D;AAC3D,uDAAmC;AACnC,uDAAmC;AAEnC,MAAM,iBAAiB,GAAG,OAAO,CAAC;AAElC,SAAgB,QAAQ;IACtB,gBAAM,CAAC,IAAI,CAAC,qCAAqC,iBAAiB,EAAE,CAAC,CAAC;IACtE,UAAU,CAAC,cAAc,CAAC;QACxB,UAAU,EAAE,iBAAiB;QAC7B,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,QAAQ,CAAC,GAAG;QACrB,UAAU,EAAE;YACV,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAM,CAAC,aAAa,EAAE,CAAC;YAC9C,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAM,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAM,CAAC,QAAQ,EAAE,CAAC;YAC5F;gBACE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAM,CAAC,aAAa,EAAE;gBAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAM,CAAC,QAAQ,EAAE;gBAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAM,CAAC,QAAQ,EAAE;aACzC;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAhBD,4BAgBC;AAED,SAAgB,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,OAAO,GAAG,IAAI;IAChE,UAAU,CAAC,aAAa,CAAC;QACvB,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,CAAC;QACR,OAAO;QACP,eAAe,EAAE,gCAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC;KACrD,CAAC,CAAC;AACL,CAAC;AAPD,kBAOC","sourcesContent":["import * as cloudwatch from 'turtle/aws/cloudwatch';\nimport { PRIORITY_DIMENSIONS } from 'turtle/aws/cloudwatch/dimensions';\nimport * as reducers from 'turtle/aws/cloudwatch/reducers';\nimport config from 'turtle/config';\nimport logger from 'turtle/logger';\n\nconst BUILD_METRIC_NAME = 'build';\n\nexport function register() {\n  logger.info(`Registered AWS Cloudwatch metric: ${BUILD_METRIC_NAME}`);\n  cloudwatch.registerMetric({\n    metricName: BUILD_METRIC_NAME,\n    unit: 'Count',\n    reducer: reducers.sum,\n    dimensions: [\n      [{ Name: 'env', Value: config.deploymentEnv }],\n      [{ Name: 'env', Value: config.deploymentEnv }, { Name: 'platform', Value: config.platform }],\n      [\n        { Name: 'env', Value: config.deploymentEnv },\n        { Name: 'platform', Value: config.platform },\n        { Name: 'host', Value: config.hostname },\n      ],\n    ],\n  });\n}\n\nexport function add(type: string, priority: string, success = true) {\n  cloudwatch.addMetricData({\n    name: BUILD_METRIC_NAME,\n    value: 1,\n    success,\n    extraDimensions: PRIORITY_DIMENSIONS(type, priority),\n  });\n}\n"]}