{"version":3,"file":"uploader.js","sourceRoot":"","sources":["../../../src/builders/utils/uploader.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAA+B;AAE/B,qCAA2C;AAC3C,0DAAmC;AACnC,0DAAmC;AAQ5B,KAAK,UAAU,eAAe,CAAC,GAAe;IACnD,IAAI,gBAAM,CAAC,OAAO,CAAC,UAAU,EAAE;QAC7B,MAAM,CAAC,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,wBAAwB,EAAE,CAAC,CAAC;QACjE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;QAChD,CAAC,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;QACjD,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,mBAA6B,CAAC,CAAC;QACzD,CAAC,CAAC,IAAI,CAAC,mBAAmB,mBAAmB,EAAE,CAAC,CAAC;QACjD,OAAO,mBAA6B,CAAC;KACtC;SAAM;QACL,MAAM,CAAC,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QACzC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,MAAM,eAAU,CAAC;YAClD,GAAG,EAAE,GAAG,CAAC,SAAmB;YAC5B,OAAO,EAAE,GAAG,CAAC,UAAU;SACxB,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,wCAAwC,YAAY,GAAG,CAAC,CAAC;QAChE,OAAO,YAAY,CAAC;KACrB;AACH,CAAC;AAlBD,0CAkBC","sourcesContent":["import * as fs from 'fs-extra';\n\nimport { uploadFile } from 'turtle/aws/s3';\nimport config from 'turtle/config';\nimport logger from 'turtle/logger';\n\ninterface IUploadCtx {\n  fakeUploadBuildPath?: string;\n  s3FileKey?: string;\n  uploadPath: string;\n}\n\nexport async function uploadBuildToS3(ctx: IUploadCtx) {\n  if (config.builder.fakeUpload) {\n    const l = logger.child({ buildPhase: 'copying build artifact' });\n    const { fakeUploadBuildPath, uploadPath } = ctx;\n    l.info('copying build to fake upload directory');\n    await fs.copy(uploadPath, fakeUploadBuildPath as string);\n    l.info(`copied build to ${fakeUploadBuildPath}`);\n    return fakeUploadBuildPath as string;\n  } else {\n    const l = logger.child({ buildPhase: 'uploading to S3' });\n    l.info('uploading build artifact to S3');\n    const { Location: fileLocation } = await uploadFile({\n      key: ctx.s3FileKey as string,\n      srcPath: ctx.uploadPath,\n    });\n    l.info(`done uploading build artifact to S3 (${fileLocation})`);\n    return fileLocation;\n  }\n}\n"]}