{"version":3,"file":"keychain.js","sourceRoot":"","sources":["../../../../src/builders/utils/ios/keychain.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mCAAwC;AAGxC,mDAAwD;AACxD,6DAAmC;AAM5B,KAAK,UAAU,MAAM,CAAC,GAAa;IACxC,MAAM,CAAC,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAC5D,IAAI;QACF,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC/B,MAAM,YAAY,GAAG,MAAM,iBAAW,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC1E,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACjC,OAAO,YAAY,CAAC;KACrB;IAAC,OAAO,GAAG,EAAE;QACZ,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,2BAA2B,CAAC,CAAC;QAC9C,MAAM,GAAG,CAAC;KACX;AACH,CAAC;AAXD,wBAWC;AAEM,KAAK,UAAU,MAAM,CAAC,GAAa,EAAE,YAAoB;IAC9D,MAAM,CAAC,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAC5D,IAAI;QACF,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC7B,MAAM,YAAY,GAAG,MAAM,iBAAW,CAAC,cAAc,CAAC;YACpD,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACjC,OAAO,YAAY,CAAC;KACrB;IAAC,OAAO,GAAG,EAAE;QACZ,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,2BAA2B,CAAC,CAAC;QAC9C,MAAM,GAAG,CAAC;KACX;AACH,CAAC;AAdD,wBAcC;AAEM,KAAK,UAAU,OAAO;IAC3B,MAAM,iBAAW,CAAC,gBAAgB,EAAE,CAAC;AACvC,CAAC;AAFD,0BAEC;AAEM,KAAK,UAAU,UAAU,CAC9B,GAAa,EACb,EACE,YAAY,EACZ,OAAO,EACP,YAAY,GACoD;IAElE,MAAM,CAAC,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,qCAAqC,EAAE,CAAC,CAAC;IAC9E,IAAI;QACF,CAAC,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;QAC9D,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC;QACvC,MAAM,SAAS,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC3D,MAAM,iBAAW,CAAC,kBAAkB,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;QAC/E,CAAC,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;KACjE;IAAC,OAAO,GAAG,EAAE;QACZ,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,yDAAyD,CAAC,CAAC;QAC5E,MAAM,GAAG,CAAC;KACX;AACH,CAAC;AAnBD,gCAmBC","sourcesContent":["import { IosKeychain } from '@expo/xdl';\n\nimport { IContext } from 'turtle/builders/ios/context';\nimport * as fileUtils from 'turtle/builders/utils/file';\nimport logger from 'turtle/logger';\n\ninterface IKeychain {\n  path: string;\n}\n\nexport async function create(ctx: IContext): Promise<IKeychain> {\n  const l = logger.child({ buildPhase: 'creating keychain' });\n  try {\n    l.info('creating keychain...');\n    const keychainInfo = await IosKeychain.createKeychain(ctx.appUUID, false);\n    l.info('done creating keychain');\n    return keychainInfo;\n  } catch (err) {\n    l.error({ err }, 'unable to create keychain');\n    throw err;\n  }\n}\n\nexport async function remove(ctx: IContext, keychainPath: string) {\n  const l = logger.child({ buildPhase: 'deleting keychain' });\n  try {\n    l.info('delete keychain...');\n    const keychainInfo = await IosKeychain.deleteKeychain({\n      path: keychainPath,\n      appUUID: ctx.appUUID,\n    });\n    l.info('done deleting keychain');\n    return keychainInfo;\n  } catch (err) {\n    l.error({ err }, 'unable to delete keychain');\n    throw err;\n  }\n}\n\nexport async function cleanUp() {\n  await IosKeychain.cleanUpKeychains();\n}\n\nexport async function importCert(\n  ctx: IContext,\n  {\n    keychainPath,\n    certP12,\n    certPassword,\n  }: { keychainPath: string; certP12: string; certPassword: string },\n) {\n  const l = logger.child({ buildPhase: 'importing certificate into keychain' });\n  try {\n    l.info('importing distribution certificate into keychain...');\n    const { tempCertPath: certPath } = ctx;\n    await fileUtils.writeBase64ToBinaryFile(certPath, certP12);\n    await IosKeychain.importIntoKeychain({ keychainPath, certPath, certPassword });\n    l.info('done importing distribution certificate into keychain');\n  } catch (err) {\n    l.error({ err }, 'unable to import distribution certificate into keychain');\n    throw err;\n  }\n}\n"]}